version: '2.4'
services:

  py3-bot:
    image: ${REGISTRY_URL}/zabbixbot_py3-bot:${BRANCH}
    #build:
    #  dockerfile: dockerfiles/Dockerfile_bot
    #  context: .
    restart: always
    environment:
      - TG_TOKEN=${TG_TOKEN}
      - zbx_server=${zbx_server}
      - zbx_api_user=${zbx_api_user}
      - zbx_api_pass=${zbx_api_pass}
      - domain_name=${domain_name}
      - tg_whitelist_username=${tg_whitelist_username}
      - authorization_token=${authorization_token}


  py3-send:
    image: ${REGISTRY_URL}/zabbixbot_py3-send:${BRANCH}
    #build:
    #  dockerfile: dockerfiles/Dockerfile_send
    #  context: .
    restart: always
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - DEBUG=${DEBUG}
      - TG_TOKEN=${TG_TOKEN}
      - zbx_server=${zbx_server}
      - zbx_api_user=${zbx_api_user}
      - zbx_api_pass=${zbx_api_pass}
      - zbx_server_version=${zbx_server_version}
      - whitelist_ip=${whitelist_ip}
      - authorization_token=${authorization_token}
    expose:
      - 80
    scale: ${SEND_COUNT}


  py3-lb:
    container_name: py3-lb
    image: dockercloud/haproxy:1.6.7
    links:
      - py3-send
    ports:
      - ${HTTP_PORT}:80
      - ${HTTPS_PORT}:443
    environment:
      - VIRTUAL_HOST=http://*,https://*
      - EXTRA_GLOBAL_SETTINGS=ssl-default-bind-options no-tlsv10
      - DEFAULT_SSL_CERT=${CERT}
      - OPTION=forwardfor header X-Real-IP
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock


  redis:
    image: redis:5-alpine
    command: ["sh", "-c", "exec redis-server --databases 1 --requirepass \"${REDIS_PASSWORD}\" --save \"\" "]
    restart: always
